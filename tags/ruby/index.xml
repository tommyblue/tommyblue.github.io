<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on TommyBlue.it</title>
    <link>http://tommyblue.it/tags/ruby/</link>
    <description>Recent content in Ruby on TommyBlue.it</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Jun 2014 10:53:00 +0000</lastBuildDate>
    
	<atom:link href="http://tommyblue.it/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Basic setup for a Ruby-based TDD Code Kata</title>
      <link>http://tommyblue.it/2014/06/24/basic-setup-for-a-ruby-based-tdd-code-kata/</link>
      <pubDate>Tue, 24 Jun 2014 10:53:00 +0000</pubDate>
      
      <guid>http://tommyblue.it/2014/06/24/basic-setup-for-a-ruby-based-tdd-code-kata/</guid>
      <description>In the last weeks with the guys of the Firenze Ruby Social Club we started to think about organizing some Code Katas to play with test-driven development and yesterday we met to play with The Game of Life.
We used Ruby and RSpec with a simple setup that I want to report here if you&amp;rsquo;d like to play with some katas.
Although probably a Kata exercise won&amp;rsquo;t need many gems, in ruby projects I like to always use a Gemfile with the required gems:</description>
    </item>
    
    <item>
      <title>How I deploy Rails apps</title>
      <link>http://tommyblue.it/2013/07/17/how-i-deploy-rails-apps/</link>
      <pubDate>Wed, 17 Jul 2013 13:18:07 +0000</pubDate>
      
      <guid>http://tommyblue.it/2013/07/17/how-i-deploy-rails-apps/</guid>
      <description>In various mailing lists I read a lot of threads about deploying a Rails app. I want to contribute to the topic with this post, where I&amp;rsquo;ll describe how I&amp;rsquo;m now deploying my rails apps in a VPS (actually it&amp;rsquo;s not a virtual but a physical server, but it&amp;rsquo;s the same..).
In the past I used Pushion Passenger but it was a very young project and when Unicorn showed up, I felt in love :) I wrote a similar post some years ago, the idea is the same, but the structure is now more solid.</description>
    </item>
    
    <item>
      <title>Paypal Express Checkout with Ruby on Rails and paypal-sdk-merchant</title>
      <link>http://tommyblue.it/2013/07/02/paypal-express-checkout-with-ruby-on-rails-and-paypal-sdk-merchant/</link>
      <pubDate>Tue, 02 Jul 2013 20:12:19 +0000</pubDate>
      
      <guid>http://tommyblue.it/2013/07/02/paypal-express-checkout-with-ruby-on-rails-and-paypal-sdk-merchant/</guid>
      <description>In my last work, Agrimè.it, an ecommerce built using Ruby on rails, I had to implement the cart payment using Paypal Express Checkout.
Sadly, I found that was the worst time to do it, because Paypal was migrating the classic API to the new REST API and the documentation was a real mess! Walking through the doc links, I jumped (without a particular logic) from the new to the old API reference and vice versa.</description>
    </item>
    
    <item>
      <title>Create a contact form for Jekyll</title>
      <link>http://tommyblue.it/2012/08/28/create-a-contact-form-for-jekyll/</link>
      <pubDate>Tue, 28 Aug 2012 10:49:43 +0000</pubDate>
      
      <guid>http://tommyblue.it/2012/08/28/create-a-contact-form-for-jekyll/</guid>
      <description>As I promised to a reader who wrote me an email some days ago, with this post I&amp;rsquo;ll explain how I built the contact form of this website using Sinatra and Sendgrid. As you know (or you&amp;rsquo;re just learning) this site is made by Jekyll, a static site generator written in Ruby. As the result of the work of Jekyll it is a static HTML website, so it&amp;rsquo;s not immediate to build a contact form.</description>
    </item>
    
    <item>
      <title>Rubyfatt 1.0 - software di fatturazione per partite IVA</title>
      <link>http://tommyblue.it/2012/08/23/rubyfatt-1.0---software-di-fatturazione-per-partite-iva/</link>
      <pubDate>Thu, 23 Aug 2012 08:29:40 +0000</pubDate>
      
      <guid>http://tommyblue.it/2012/08/23/rubyfatt-1.0---software-di-fatturazione-per-partite-iva/</guid>
      <description>Approfittando della pausa estiva sono riuscito a lavorare un po&#39; su Rubyfatt, il software che mi sono scritto per la gestione della mia partita IVA.
Senza dilungarmi troppo, dalla versione 1.0 il software è ormai maturo e può essere usato senza problemi (spero). Vi rimando alla pagina ufficiale all&#39;indirizzo: http://rubyfatt.kreations.it in cu si trova la lista di tutte le caratteristiche e le istruzioni per installarlo.
Ovviamente ogni aiuto è ben accetto, trovate tutto sulla pagina di Github del progetto</description>
    </item>
    
    <item>
      <title>Rubyfatt - software di fatturazione per partite IVA</title>
      <link>http://tommyblue.it/2012/05/06/rubyfatt---software-di-fatturazione-per-partite-iva/</link>
      <pubDate>Sun, 06 May 2012 21:53:00 +0000</pubDate>
      
      <guid>http://tommyblue.it/2012/05/06/rubyfatt---software-di-fatturazione-per-partite-iva/</guid>
      <description>UPDATE: Ho scritto un articolo aggiornato su Rubyfatt 1.0, vai a leggerlo &amp;raquo; A Gennaio ho cambiato regime di partita IVA e con esso anche il calcolo delle tasse sulle notule. Dopo vani sforzi ho deciso che il mio caro Billings non sarebbe mai stato in grado di capire le particolarissime tasse nostrane e ho deciso di scrivermi un software per gestire le mie notule. Ovviamente l&#39;ho scritto usando Ruby on Rails ed è open-source (lo trovate su Github).</description>
    </item>
    
    <item>
      <title>Bind Log Analyzer: Simple analysis and SQL storage for Bind logs</title>
      <link>http://tommyblue.it/2012/04/03/bind-log-analyzer-simple-analysis-and-sql-storage-for-bind-logs/</link>
      <pubDate>Tue, 03 Apr 2012 13:34:43 +0000</pubDate>
      
      <guid>http://tommyblue.it/2012/04/03/bind-log-analyzer-simple-analysis-and-sql-storage-for-bind-logs/</guid>
      <description>Bind Log Analyzer is my first gem :)
It analyzes a Bind query log file and stores the logs into a database (using ActiveRecord). See the details and the source code on GitHub and get the gem on RubyGems. Or simply install it with:
gem install bind_log_analyzer  Starting from version 0.2.1 it includes a simple Sinatra webserver to show some reports and (soon) some cool graphs.</description>
    </item>
    
  </channel>
</rss>